<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Dashboard</title>
  <style>
    :root {
      --primary: #1e1e2f;
      --secondary: #2a2a40;
      --text: #ffffffcc;
      --accent: #4fc3f7;
      --border: #3c3c50;
    }

    * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', sans-serif; }

    body { background: var(--primary); color: var(--text); display: flex; height: 100vh; overflow: hidden; }

    .container { display: flex; width: 100%; }

    .sidebar {
      width: 240px;
      background: var(--secondary);
      padding: 30px 20px;
      border-right: 1px solid var(--border);
    }

    .sidebar h2 { font-size: 18px; margin-bottom: 40px; color: #fff; }
    .sidebar ul { list-style: none; }
    .sidebar ul li a {
      display: block; padding: 12px 0;
      color: var(--text); text-decoration: none; transition: 0.3s;
    }
    .sidebar ul li a:hover,
    .sidebar ul .active a { color: var(--accent); font-weight: bold; }

    .dashboard {
      flex: 1;
      padding: 40px;
      position: relative;
      background: #1b1b2e;
    }

    .header { display: flex; justify-content: space-between; align-items: center; }
    .admin-profile { display: flex; align-items: center; gap: 10px; }
    .avatar {
      width: 45px; height: 45px;
      background: url('https://cdn-icons-png.flaticon.com/512/847/847969.png') no-repeat center;
      background-size: cover; border-radius: 50%;
      border: 2px solid var(--accent);
    }

    .stats { display: flex; margin-top: 40px; gap: 20px; }
    .stat-card {
      background-color: var(--secondary);
      padding: 24px;
      border-radius: 10px;
      width: 180px;
      text-align: center;
      border: 1px solid var(--border);
    }
    .stat-card h2 { font-size: 32px; margin-bottom: 8px; color: #fff; }

    .actions { margin: 30px 0; display: flex; gap: 16px; }
    .actions button {
      background: var(--secondary);
      color: var(--text);
      border: 1px solid var(--accent);
      padding: 10px 18px;
      border-radius: 6px;
      cursor: pointer;
      transition: 0.3s ease;
    }
    .actions button:hover { background: var(--accent); color: #000; }

    .chart-section {
      position: absolute;
      top: 180px; right: 40px;
      width: 300px;
      background: var(--secondary);
      padding: 20px;
      border-radius: 12px;
      border: 1px solid var(--border);
    }
    .chart-section h3 { text-align: center; margin-bottom: 20px; color: #fff; }
    .legend { display: flex; justify-content: space-around; margin-top: 12px; }
    .dot { width: 12px; height: 12px; border-radius: 50%; display: inline-block; margin-right: 6px; }
    .approved { background: #4fc3f7; }
    .rejected { background: #888; }

    /* Toast notifications */
    #toast-container {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 9999;
    }
    .toast {
      background: #4fc3f7;
      color: #000;
      padding: 12px 18px;
      margin-bottom: 10px;
      border-radius: 6px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.3);
      font-size: 14px;
      animation: fadein 0.5s, fadeout 0.5s 4.5s;
    }
    @keyframes fadein { from {opacity: 0;} to {opacity:1;} }
    @keyframes fadeout { from {opacity:1;} to {opacity:0;} }
  </style>
</head>
<body>
  <div class="container" id="dashboardContent">
    <aside class="sidebar">
      <h2>BUS PASS ADMIN</h2>
      <ul>
        <li class="active"><a href="/admindashboard">Dashboard</a></li>
        <li><a href="/pending">Pending</a></li>
        <li><a href="/approved">Approved</a></li>
        <li><a href="/search">Search User</a></li>
        <li><a href="/logout">Logout</a></li>
      </ul>
    </aside>

    <main class="dashboard">
      <div class="header">
        <h1>ADMIN DASHBOARD</h1>
        <div class="admin-profile">
          <span>Welcome Back,<br><strong>Admin</strong></span>
          <div class="avatar"></div>
        </div>
      </div>

      <div class="stats">
        <div class="stat-card">
          <h2><%= totalApplications || 0 %></h2>
          <p>Total Applications</p>
        </div>
        <div class="stat-card">
          <h2><%= pendingApplications || 0 %></h2>
          <p>Pending Approvals</p>
        </div>
        <div class="stat-card">
          <h2><%= approvedApplications || 0 %></h2>
          <p>Approved Passes</p>
        </div>
      </div>

      <div class="actions">
        <button onclick="location.href='/pending'">VIEW APPLICATIONS</button>
        <button onclick="exportPDF()">EXPORT PDF</button>
      </div>

      <div class="chart-section">
        <h3>BUS PASS STATS</h3>
        <canvas id="passChart" width="250" height="250"></canvas>
        <div class="legend">
          <span><div class="dot approved"></div>Approved</span>
          <span><div class="dot rejected"></div>Pending</span>
        </div>
      </div>
    </main>
  </div>

  <!-- Toast Container -->
  <div id="toast-container"></div>

  <!-- Chart.js & PDF Libraries -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

  <script>
    // Chart.js Safe Values
    const approved = parseInt("<%= approvedApplications || 0 %>");
    const pending = parseInt("<%= pendingApplications || 0 %>");

    const ctx = document.getElementById('passChart').getContext('2d');
    new Chart(ctx, {
      type: 'pie',
      data: {
        labels: ['Approved', 'Pending'],
        datasets: [{
          label: 'Bus Pass Stats',
          data: [approved, pending],
          backgroundColor: ['#4fc3f7', '#888'],
          borderColor: '#1b1b2e',
          borderWidth: 1
        }]
      },
      options: { plugins: { legend: { display: false } } }
    });

    // Export to PDF
    async function exportPDF() {
      const { jsPDF } = window.jspdf;
      const dashboard = document.getElementById('dashboardContent');
      const canvas = await html2canvas(dashboard);
      const imgData = canvas.toDataURL('image/png');
      const pdf = new jsPDF('p', 'mm', 'a4');
      const imgProps = pdf.getImageProperties(imgData);
      const pdfWidth = pdf.internal.pageSize.getWidth();
      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
      pdf.save('Admin_Dashboard.pdf');
    }

    // Toast Notification Function
    function showToast(message) {
      const container = document.getElementById('toast-container');
      const toast = document.createElement('div');
      toast.classList.add('toast');
      toast.textContent = message;
      container.appendChild(toast);
      setTimeout(() => toast.remove(), 5000);
    }

    // Fetch notifications
    fetch('/admin/notifications')
      .then(res => res.json())
      .then(data => {
        data.forEach(n => showToast(n.message));
      });
  </script>
</body>
</html>
